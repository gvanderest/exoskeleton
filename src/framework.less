@total-generate-columns: 16;

@debug: false;
@large-width: 960px;
@medium-width: 720px;
@small-width: 100%;

@vertical-padding: 10px;
@horizontal-padding: 20px;


/*
______           _        _____ _         _
| ___ \         (_)      /  ___| |       | |
| |_/ / __ _ ___ _  ___  \ `--.| |_ _   _| | ___  ___
| ___ \/ _` / __| |/ __|  `--. \ __| | | | |/ _ \/ __|
| |_/ / (_| \__ \ | (__  /\__/ / |_| |_| | |  __/\__ \
\____/ \__,_|___/_|\___| \____/ \__|\__, |_|\___||___/
                                     __/ |
                                    |___/
*/
* {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
body {
    margin: 0;
    font-family: sans-serif;
    font-size: 13px;
    line-height: 1.3;
}

.align-left { text-align: left; }
.align-center { text-align: center; }
.align-right { text-align: right; }
.hide { display: none; }
.pad { padding: @vertical-padding @horizontal-padding @vertical-padding @horizontal-padding; }
.pad-top { padding-top: @vertical-padding; }
.pad-right { padding-right: @horizontal-padding; }
.pad-bottom { padding-bottom: @vertical-padding; }
.pad-left { padding-left: @horizontal-padding; }

.generate-formatting(@prefix) {
    .@{prefix}-align-left, .align-left-@{prefix} { .align-left; }
    .@{prefix}-align-center, .align-center-@{prefix} { .align-center; }
    .@{prefix}-align-right, .align-right-@{prefix} { .align-right; }
    .@{prefix}-hide, .hide-@{prefix} { .hide; }
    .@{prefix}-pad, .pad-@{prefix} { .pad; }
    .@{prefix}-pad-top, .pad-top-@{prefix} { .pad-top; }
    .@{prefix}-pad-right, .pad-right-@{prefix} { .pad-right; }
    .@{prefix}-pad-bottom, .pad-bottom-@{prefix} { .pad-bottom; }
    .@{prefix}-pad-left, .pad-left-@{prefix} { .pad-left; }
}


/*
______                     ___            _   _____       _
| ___ \                   / _ \          | | /  __ \     | |
| |_/ /_____      _____  / /_\ \_ __   __| | | /  \/ ___ | |_   _ _ __ ___  _ __  ___
|    // _ \ \ /\ / / __| |  _  | '_ \ / _` | | |    / _ \| | | | | '_ ` _ \| '_ \/ __|
| |\ \ (_) \ V  V /\__ \ | | | | | | | (_| | | \__/\ (_) | | |_| | | | | | | | | \__ \
\_| \_\___/ \_/\_/ |___/ \_| |_/_| |_|\__,_|  \____/\___/|_|\__,_|_| |_| |_|_| |_|___/


*/
.generate-row(@width) {
    .row {
        width: @width;
        clear: both;
        margin: 0 auto;
        min-height: 1px;
        &::after {
            content: '';
            display: block;
            clear: both;
        }

        & when(@debug = true) {
            border: 2px solid red;
        }
    }
}

// Generate for a single column
.generate-column(@size, @column, @width) {
    .@{size}-@{column} {
        width: @width;
        float: left;

        & when(@debug = true) {
            border: 2px solid green;
        }
    }
}

// Generator for normal generate-columns
.generate-columns(@size, @i: 1) when (@i =< @total-generate-columns) {
    .generate-column(@size, @i, (@i * 100% / @total-generate-columns));
    .generate-columns(@size, (@i + 1));

    // Extra columns for relative size
    .generate-column(@size, quarter, 25%);
    .generate-column(@size, half, 50%);
}

// Generate all the styles needed for a media query
.generate-size(@label, @width) {
    .generate-row(@width);
    .generate-columns(@label);
    .generate-formatting(@label)
}

// Generate the columns with no width
.generate-columns(column);


/*
___  ___         _ _         _____                 _
|  \/  |        | (_)       |  _  |               (_)
| .  . | ___  __| |_  __ _  | | | |_   _  ___ _ __ _  ___  ___
| |\/| |/ _ \/ _` | |/ _` | | | | | | | |/ _ \ '__| |/ _ \/ __|
| |  | |  __/ (_| | | (_| | \ \/' / |_| |  __/ |  | |  __/\__ \
\_|  |_/\___|\__,_|_|\__,_|  \_/\_\\__,_|\___|_|  |_|\___||___/


*/
// Large (desktop) size only
@media (min-width: @large-width) {
    .generate-size(large, @large-width);
}

// Medium (tablet) size only
@media (min-width: @medium-width) and (max-width: (@large-width - 1px)) {
    .generate-size(medium, @medium-width);
}

// Small (phone) size only
@media (max-width: (@medium-width - 1px)) {
    .generate-size(small, @small-width);
}
